@import "./math"

#throws 
  font-size: 60px

  .player 
    color: #0a70ff
    float: left
  

  .opponent 
    color: #f6cd46
    float: right
  
  $middle-angle: pi() * -0.5
  $up-angle: $middle-angle + pi() * 0.08
  $down-angle: $middle-angle - pi() * 0.01
  $up-shift: -50
  $down-shift: 20

  @mixin playerHandState($angle, $shift)
    $matrix: matrix(cos($angle), -1 * sin($angle), sin($angle), cos($angle), 0, $shift)
    -webkit-transform: $matrix
    -moz-transform: $matrix
    -o-transform: $matrix
    -ms-transform: $matrix
    transform: $matrix

  @keyframes player-wiggle 
    0%
      @include playerHandState($middle-angle, 0)

    45%
      @include playerHandState($up-angle, $up-shift)

    90%
      @include playerHandState($down-angle, $down-shift)

    100%
      @include playerHandState($middle-angle, 0)

  @keyframes opponent-wiggle
    $sin-mid: 1
    $cos-mid: 0
    $sin-up: 0.96858
    $cos-up: -0.24869
    $sin-down: 0.99951
    $cos-down: 0.03141

    $a: -1
    $c: -1
    $b: -1
    $d: 1

    // $matrix-mid: matrix( $a * $cos-mid, $c * $sin-mid, $b * $sin-mid, $d * $cos-mid, 0, 0 )
    // $matrix-mid: matrix( 1, 0, 0, 1, 0, 0 )
    // $matrix-mid: matrix( -1, 0, 0, 1, 0, 0 ) // reflect-x
    // $matrix-mid: matrix( 0, 1, -1, 0, 0, 0 ) // rotate cw
    // $matrix-mid: matrix( 0, -1, 1, 0, 0, 0 ) // rotate ccw
    // $matrix-mid: matrix( 0, -1, -1, 0, 0, 0 ) // reflect then rotate ccw
    $matrix-mid: matrix( 0, 1, 1, 0, 0, 0 ) // rotate ccw then reflect

    $matrix-up: matrix( $a * $cos-up, $c * $sin-up, $b * $sin-up, $d * $cos-up, 0, 0 )
    $matrix-down: matrix( $a * $cos-down, $c * $sin-down, $b * $sin-down, $d * $cos-down, 0, 0 )

    0%
      transform: $matrix-mid
      backface-visibility: hidden
    100%
      transform: $matrix-mid
      backface-visibility: hidden

  .player-wiggle 
    animation: 0.45s 4 normal ease-in player-wiggle 
  
  .opponent-wiggle
    animation: 0.45s 4 normal ease-in opponent-wiggle
    backface-visibility: hidden